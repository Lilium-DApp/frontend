{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_certifier",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ApproveFrom",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Retire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteParity",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "parityRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cartesiCertifier",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60406080815234620004095762001983803803806200001e816200040e565b928339810160a082820312620004095781516001600160401b0391908281116200040957816200005091850162000434565b91602091828501519082821162000409576200006e91860162000434565b858501519060ff821680920362000409576200009b60806200009360608901620004a6565b9701620004a6565b928551818111620003f3576004928354916001988984811c94168015620003e8575b89851014620003d3578190601f948581116200037d575b508990858311600114620003155760009262000309575b5050600019600383901b1c191690891b1784555b8051928311620002f4576005938454908982811c92168015620002e9575b89831014620002d45750908183859493116200027e575b508791831160011462000216576000926200020a575b5050600019600383901b1c191690861b1790555b60075560018060a01b038094169360018060a01b031991858360085416176008551690600954161760095560008052600081528360002083600052815260ff84600020541615620001b9575b83516114c79081620004bc8239f35b600080526000815283600020908360005252826000209060ff19825416179055339060007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001aa565b0151905038806200014a565b90889350601f1983169185600052886000209260005b8a8282106200026757505084116200024d575b505050811b0190556200015e565b015160001960f88460031b161c191690553880806200023f565b8385015186558c979095019493840193016200022c565b90919250846000528760002083808601871c8201928a8710620002ca575b9186958c9295949301881c01915b828110620002ba57505062000134565b600081558695508b9101620002aa565b925081926200029c565b602290634e487b7160e01b6000525260246000fd5b91607f16916200011d565b604184634e487b7160e01b6000525260246000fd5b015190503880620000eb565b908b9350601f19831691886000528b6000209260005b8d8282106200036657505084116200034c575b505050811b018455620000ff565b015160001960f88460031b161c191690553880806200033e565b8385015186558f979095019493840193016200032b565b90915086600052896000208580850160051c8201928c8610620003c9575b918d91869594930160051c01915b828110620003b9575050620000d4565b600081558594508d9101620003a9565b925081926200039b565b602286634e487b7160e01b6000525260246000fd5b93607f1693620000bd565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003f357604052565b919080601f84011215620004095782516001600160401b038111620003f3576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c565b51906001600160a01b0382168203620004095756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610d275750816306fdde0314610c32578163095ea7b314610c0857816318160ddd14610be957816323b872dd14610b1d578163248a9ca314610af35781632d15a56714610a405781632f2ff15d14610997578163313ce5671461097b57816336568abe146108e95781633790cf571461077f578163395093511461072f57816340c10f191461046e57816370a082311461043657816391d14854146103f057816395d89b41146102ed578163a217fddf146102d2578163a457c2d714610223578163a9059cbb146101f1578163d547741f146101af57508063dd62ed3e146101675763fc0c546a1461011757600080fd5b3461016357816003193601126101635760a0906006549060075490600180851b0390816008541690826009541692600a5416938151958652602086015284015260608301526080820152f35b5080fd5b503461016357806003193601126101635780602092610184610dc9565b61018c610de4565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b919050346101ed57806003193601126101ed576101ea91356101e560016101d4610de4565b938387528660205286200154610dfa565b610ffa565b80f35b8280fd5b50503461016357806003193601126101635760209061021a610211610dc9565b60243590611450565b90519015158152f35b905082346102cf57826003193601126102cf5761023e610dc9565b918360243592338152600260205281812060018060a01b038616825260205220549082821061027e576020856102778585038733611201565b5160018152f35b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50503461016357816003193601126101635751908152602090f35b919050346101ed57826003193601126101ed57805191836005549060019082821c9282811680156103e6575b60209586861082146103d357508488529081156103b15750600114610358575b610354868661034a828b0383610fd8565b5191829182610d9d565b0390f35b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b82841061039e57505050826103549461034a928201019438610339565b8054868501880152928601928101610381565b60ff191687860152505050151560051b830101925061034a8261035438610339565b634e487b7160e01b845260229052602483fd5b93607f1693610319565b9050346101ed57816003193601126101ed578160209360ff92610411610de4565b903582528186528282206001600160a01b039091168252855220549151911615158152f35b5050346101635760203660031901126101635760209181906001600160a01b0361045e610dc9565b1681526001845220549051908152f35b9050346101ed57816003193601126101ed57610488610dc9565b906024928335917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a693848752602094878652838820338952865260ff84892054161561056d57506001600160a01b031694851561052d575050918185936105127fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9460035461106e565b6003558585526001835280852082815401905551908152a380f35b601f9085606494519362461bcd60e51b85528401528201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b85915086889161057c3361132a565b909186519261058a84610fa6565b6042845285840194606036873784511561071d576030865384519060019182101561070b5790607860218701536041915b8183116106a257505050610661575061065d9386936106499361063a6048946106119a519a8576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8d978801528251928391603789019101610d7a565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190610d7a565b01036028810187520185610fd8565b5162461bcd60e51b81529283928301610d9d565b0390fd5b9250505081606494519362461bcd60e51b85528401528201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156106f9576f181899199a1a9b1b9c1cb0b131b232b360811b901a6106d28589611303565b53891c9280156106e7576000190191906105bb565b634e487b7160e01b825260118a528482fd5b634e487b7160e01b835260328b528583fd5b634e487b7160e01b8152603289528390fd5b634e487b7160e01b8152603288529050fd5b505034610163578060031936011261016357610277602092610778610752610dc9565b338352600286528483206001600160a01b0382168452865291849020546024359061106e565b9033611201565b83833461016357602091826003193601126102cf57833592338252600181528383832054106000146107c25782516377b8dde360e01b8152808601859052602490fd5b9092331561089c5733845260018252828420549481861061084e5750807f82b89ed824b293574a2cca050e6e27837b60436d911352f8dca203a9cd35241c949533875260018452038386205580600354036003558483518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a3825191338352820152a180f35b835162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b825162461bcd60e51b8152808601839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b83915034610163578260031936011261016357610904610de4565b90336001600160a01b0383160361092057906101ea9135610ffa565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b5050346101635781600319360112610163576020905160028152f35b9050346101ed57816003193601126101ed5735906109b3610de4565b90828452836020526109ca60018286200154610dfa565b82845260208481528185206001600160a01b039093168086529290528084205460ff16156109f6578380f35b828452836020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b9050346101ed57826003193601126101ed576009548251633fabe5a360e21b81529160a09183919082906001600160a01b03165afa928315610ae8578093610a93575b6020846305f5e100855191058152f35b90925060a0833d8211610ae0575b81610aae60a09383610fd8565b810103126102cf57506305f5e10082610ac8602094611439565b50610ad96080858301519201611439565b5092610a83565b3d9150610aa1565b8251903d90823e3d90fd5b9050346101ed5760203660031901126101ed57816020936001923581528085522001549051908152f35b8391503461016357606036600319011261016357610b39610dc9565b610b41610de4565b6001600160a01b03821684526002602090815285852033865290529284902054604435939260018201610b7d575b602086610277878787611091565b848210610ba65750918391610b9b6020969561027795033383611201565b919394819350610b6f565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101635781600319360112610163576020906003549051908152f35b505034610163578060031936011261016357602090610277610c28610dc9565b6024359033611201565b838334610163578160031936011261016357805191809380549160019083821c92828516948515610d1d575b6020958686108114610d0a57858952908115610ce65750600114610c8e575b610354878761034a828c0383610fd8565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610cd357505050826103549461034a92820101948680610c7d565b8054868501880152928601928101610cb5565b60ff19168887015250505050151560051b830101925061034a826103548680610c7d565b634e487b7160e01b845260228352602484fd5b93607f1693610c5e565b8491346101ed5760203660031901126101ed573563ffffffff60e01b81168091036101ed5760209250637965db0b60e01b8114908115610d69575b5015158152f35b6301ffc9a760e01b14905083610d62565b60005b838110610d8d5750506000910152565b8181015183820152602001610d7d565b60409160208252610dbd8151809281602086015260208686019101610d7a565b601f01601f1916010190565b600435906001600160a01b0382168203610ddf57565b600080fd5b602435906001600160a01b0382168203610ddf57565b6000818152602090808252604092838220338352835260ff848320541615610e225750505050565b610e2b3361132a565b845191610e3783610fa6565b60428352848301936060368637835115610f925760308553835190600191821015610f925790607860218601536041915b818311610f2457505050610ee257610611938593610ecc93610ebd60489461065d9951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101610d7a565b01036028810185520183610fd8565b5162461bcd60e51b815291829160048301610d9d565b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610f7e576f181899199a1a9b1b9c1cb0b131b232b360811b901a610f548588611303565b5360041c928015610f6a57600019019190610e68565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b6080810190811067ffffffffffffffff821117610fc257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610fc257604052565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541661102a57505050565b80835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b9190820180921161107b57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156111ae571691821561115d576000828152600160205260408120549180831061110957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156112b257169182156112625760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b908151811015611314570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff821117610fc257604052602a82526020820160403682378251156113145760309053815160019081101561131457607860218401536029905b8082116113cb5750506113875790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611424576f181899199a1a9b1b9c1cb0b131b232b360811b901a6113fa8486611303565b5360041c91801561140f576000190190611377565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b519069ffffffffffffffffffff82168203610ddf57565b3360005260016020528160406000205410600014611481576040516377b8dde360e01b815260048101839052602490fd5b9061148c9133611091565b60019056fea2646970667358221220898acc7c716929ed1437018e9280f703a3cac314d0ec956ec119f1a0f929b7b664736f6c63430008140033",
    "sourceMap": "589:2721:69:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;2046:13:22;589:2721:69;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;-1:-1:-1;589:2721:69;;;;-1:-1:-1;;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;2069:17:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;-1:-1:-1;;;;589:2721:69;;;;;;;;;;;;;;1119:14;589:2721;;;;;;;;;;;;;;;;;;;1155:11;589:2721;;;1155:11;589:2721;;;1189:18;589:2721;;;1189:18;589:2721;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;-1:-1:-1;589:2721:69;;;7669:23:15;7665:149;;589:2721:69;;;;;;;;;;7665:149:15;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;;;;;;;;719:10:27;7763:40:15;-1:-1:-1;7763:40:15;;;;7665:149;;;;;589:2721:69;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;-1:-1:-1;589:2721:69;;2046:13:22;589:2721:69;;-1:-1:-1;589:2721:69;;-1:-1:-1;589:2721:69;;;;;;;;;-1:-1:-1;;589:2721:69;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610d275750816306fdde0314610c32578163095ea7b314610c0857816318160ddd14610be957816323b872dd14610b1d578163248a9ca314610af35781632d15a56714610a405781632f2ff15d14610997578163313ce5671461097b57816336568abe146108e95781633790cf571461077f578163395093511461072f57816340c10f191461046e57816370a082311461043657816391d14854146103f057816395d89b41146102ed578163a217fddf146102d2578163a457c2d714610223578163a9059cbb146101f1578163d547741f146101af57508063dd62ed3e146101675763fc0c546a1461011757600080fd5b3461016357816003193601126101635760a0906006549060075490600180851b0390816008541690826009541692600a5416938151958652602086015284015260608301526080820152f35b5080fd5b503461016357806003193601126101635780602092610184610dc9565b61018c610de4565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b919050346101ed57806003193601126101ed576101ea91356101e560016101d4610de4565b938387528660205286200154610dfa565b610ffa565b80f35b8280fd5b50503461016357806003193601126101635760209061021a610211610dc9565b60243590611450565b90519015158152f35b905082346102cf57826003193601126102cf5761023e610dc9565b918360243592338152600260205281812060018060a01b038616825260205220549082821061027e576020856102778585038733611201565b5160018152f35b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50503461016357816003193601126101635751908152602090f35b919050346101ed57826003193601126101ed57805191836005549060019082821c9282811680156103e6575b60209586861082146103d357508488529081156103b15750600114610358575b610354868661034a828b0383610fd8565b5191829182610d9d565b0390f35b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b82841061039e57505050826103549461034a928201019438610339565b8054868501880152928601928101610381565b60ff191687860152505050151560051b830101925061034a8261035438610339565b634e487b7160e01b845260229052602483fd5b93607f1693610319565b9050346101ed57816003193601126101ed578160209360ff92610411610de4565b903582528186528282206001600160a01b039091168252855220549151911615158152f35b5050346101635760203660031901126101635760209181906001600160a01b0361045e610dc9565b1681526001845220549051908152f35b9050346101ed57816003193601126101ed57610488610dc9565b906024928335917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a693848752602094878652838820338952865260ff84892054161561056d57506001600160a01b031694851561052d575050918185936105127fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9460035461106e565b6003558585526001835280852082815401905551908152a380f35b601f9085606494519362461bcd60e51b85528401528201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b85915086889161057c3361132a565b909186519261058a84610fa6565b6042845285840194606036873784511561071d576030865384519060019182101561070b5790607860218701536041915b8183116106a257505050610661575061065d9386936106499361063a6048946106119a519a8576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8d978801528251928391603789019101610d7a565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190610d7a565b01036028810187520185610fd8565b5162461bcd60e51b81529283928301610d9d565b0390fd5b9250505081606494519362461bcd60e51b85528401528201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156106f9576f181899199a1a9b1b9c1cb0b131b232b360811b901a6106d28589611303565b53891c9280156106e7576000190191906105bb565b634e487b7160e01b825260118a528482fd5b634e487b7160e01b835260328b528583fd5b634e487b7160e01b8152603289528390fd5b634e487b7160e01b8152603288529050fd5b505034610163578060031936011261016357610277602092610778610752610dc9565b338352600286528483206001600160a01b0382168452865291849020546024359061106e565b9033611201565b83833461016357602091826003193601126102cf57833592338252600181528383832054106000146107c25782516377b8dde360e01b8152808601859052602490fd5b9092331561089c5733845260018252828420549481861061084e5750807f82b89ed824b293574a2cca050e6e27837b60436d911352f8dca203a9cd35241c949533875260018452038386205580600354036003558483518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a3825191338352820152a180f35b835162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b825162461bcd60e51b8152808601839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b83915034610163578260031936011261016357610904610de4565b90336001600160a01b0383160361092057906101ea9135610ffa565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b5050346101635781600319360112610163576020905160028152f35b9050346101ed57816003193601126101ed5735906109b3610de4565b90828452836020526109ca60018286200154610dfa565b82845260208481528185206001600160a01b039093168086529290528084205460ff16156109f6578380f35b828452836020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b9050346101ed57826003193601126101ed576009548251633fabe5a360e21b81529160a09183919082906001600160a01b03165afa928315610ae8578093610a93575b6020846305f5e100855191058152f35b90925060a0833d8211610ae0575b81610aae60a09383610fd8565b810103126102cf57506305f5e10082610ac8602094611439565b50610ad96080858301519201611439565b5092610a83565b3d9150610aa1565b8251903d90823e3d90fd5b9050346101ed5760203660031901126101ed57816020936001923581528085522001549051908152f35b8391503461016357606036600319011261016357610b39610dc9565b610b41610de4565b6001600160a01b03821684526002602090815285852033865290529284902054604435939260018201610b7d575b602086610277878787611091565b848210610ba65750918391610b9b6020969561027795033383611201565b919394819350610b6f565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101635781600319360112610163576020906003549051908152f35b505034610163578060031936011261016357602090610277610c28610dc9565b6024359033611201565b838334610163578160031936011261016357805191809380549160019083821c92828516948515610d1d575b6020958686108114610d0a57858952908115610ce65750600114610c8e575b610354878761034a828c0383610fd8565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610cd357505050826103549461034a92820101948680610c7d565b8054868501880152928601928101610cb5565b60ff19168887015250505050151560051b830101925061034a826103548680610c7d565b634e487b7160e01b845260228352602484fd5b93607f1693610c5e565b8491346101ed5760203660031901126101ed573563ffffffff60e01b81168091036101ed5760209250637965db0b60e01b8114908115610d69575b5015158152f35b6301ffc9a760e01b14905083610d62565b60005b838110610d8d5750506000910152565b8181015183820152602001610d7d565b60409160208252610dbd8151809281602086015260208686019101610d7a565b601f01601f1916010190565b600435906001600160a01b0382168203610ddf57565b600080fd5b602435906001600160a01b0382168203610ddf57565b6000818152602090808252604092838220338352835260ff848320541615610e225750505050565b610e2b3361132a565b845191610e3783610fa6565b60428352848301936060368637835115610f925760308553835190600191821015610f925790607860218601536041915b818311610f2457505050610ee257610611938593610ecc93610ebd60489461065d9951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101610d7a565b01036028810185520183610fd8565b5162461bcd60e51b815291829160048301610d9d565b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610f7e576f181899199a1a9b1b9c1cb0b131b232b360811b901a610f548588611303565b5360041c928015610f6a57600019019190610e68565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b6080810190811067ffffffffffffffff821117610fc257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610fc257604052565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541661102a57505050565b80835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b9190820180921161107b57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156111ae571691821561115d576000828152600160205260408120549180831061110957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156112b257169182156112625760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b908151811015611314570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff821117610fc257604052602a82526020820160403682378251156113145760309053815160019081101561131457607860218401536029905b8082116113cb5750506113875790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611424576f181899199a1a9b1b9c1cb0b131b232b360811b901a6113fa8486611303565b5360041c91801561140f576000190190611377565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b519069ffffffffffffffffffff82168203610ddf57565b3360005260016020528160406000205410600014611481576040516377b8dde360e01b815260048101839052602490fd5b9061148c9133611091565b60019056fea2646970667358221220898acc7c716929ed1437018e9280f703a3cac314d0ec956ec119f1a0f929b7b664736f6c63430008140033",
    "sourceMap": "589:2721:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:29;589:2721;;641:29;589:2721;;;;;;;;;641:29;589:2721;;;;641:29;589:2721;;;641:29;589:2721;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;589:2721:69;;;;;4102:11:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5486:7:15;589:2721:69;;2642:4:15;589:2721:69;;;:::i;:::-;;;;;;;;;;4604:22:15;589:2721:69;2642:4:15;:::i;:::-;5486:7;:::i;:::-;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:27;;589:2721:69;;4102:11:22;589:2721:69;;;;;;;;;;;;;;;;;;6792:35:22;;;;589:2721:69;;;;6928:34:22;589:2721:69;;;;719:10:27;6928:34:22;:::i;:::-;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:7:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2457:7:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;-1:-1:-1;;;589:2721:69;;2457:7:22;589:2721:69;;;;;-1:-1:-1;589:2721:69;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;;;;-1:-1:-1;;;;;589:2721:69;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;708:24;;589:2721;;;;;;;;;;;;719:10:27;589:2721:69;;;;;;;;;;3931:23:15;3927:390;;-1:-1:-1;;;;;;589:2721:69;;8603:21:22;;589:2721:69;;;;;;;;8731:22:22;8952:37;589:2721:69;;;8731:22:22;:::i;:::-;589:2721:69;;;;;;;;;;;;;;;;;;;;;8952:37:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:390:15;719:10:27;;;;;;2497:52:28;719:10:27;2497:52:28;:::i;:::-;1818:437;589:2721:69;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1975:15:28;;;589:2721:69;;;;;;;;;;;2000:15:28;589:2721:69;;;2000:15:28;589:2721:69;2025:128:28;2058:5;;;;;;2170:10;;;278:18;;589:2721:69;3970:336:15;589:2721:69;;;4022:252:15;589:2721:69;;;;;;;4022:252:15;;-1:-1:-1;;;4022:252:15;;;;589:2721:69;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;:::i;:::-;;4022:252:15;;;;;;;;;:::i;:::-;589:2721:69;-1:-1:-1;;;3970:336:15;;589:2721:69;;;3970:336:15;;;:::i;:::-;;;;278:18:28;589:2721:69;;;;;278:18:28;589:2721:69;;;;;;278:18:28;;;;;;;589:2721:69;278:18:28;589:2721:69;;;278:18:28;;2065:3;2105:11;;;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:28;;2084:33;;;;:::i;:::-;;278:18;;2065:3;589:2721:69;;;;-1:-1:-1;;589:2721:69;;2030:26:28;;;589:2721:69;-1:-1:-1;;;589:2721:69;;;;;;;;2096:21:28;-1:-1:-1;;;589:2721:69;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;6021:38:22;589:2721:69;;6021:38:22;589:2721:69;;:::i;:::-;719:10:27;589:2721:69;;4102:11:22;589:2721:69;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;;;;;6021:38:22;:::i;:::-;719:10:27;;6021:38:22;:::i;589:2721:69:-;;;;;;;;;;;;;;;;;;2498:10;;589:2721;;;;;;;;;;2488:31;2484:199;2488:31;;;589:2721;;-1:-1:-1;;;2542:27:69;;;;;589:2721;;;;;2542:27;2484:199;2498:10;;;9458:21:22;589:2721:69;;2498:10;589:2721;;;;;;;;;9649:24:22;;;;589:2721:69;;2498:10;;2645:27;2498:10;;;589:2721;;;;;;;;;;;;;;;;;;;;;;9931:37:22;2498:10:69;;9931:37:22;;589:2721:69;;2498:10;;589:2721;;;;;2645:27;589:2721;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:10:27;;-1:-1:-1;;;;;589:2721:69;;6133:23:15;589:2721:69;;;6237:7:15;589:2721:69;;6237:7:15;:::i;589:2721:69:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;1884:1;589:2721;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2642:4:15;589:2721:69;;;;4604:22:15;589:2721:69;2642:4:15;:::i;:::-;589:2721:69;;;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;;;;;;;;;;7669:23:15;7665:149;;589:2721:69;;;7665:149:15;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;719:10:27;7763:40:15;;;;;7665:149;;;589:2721:69;;;;;;;;;;;;;;;;;1573:18;589:2721;;;-1:-1:-1;;;1551:72:69;;589:2721;;;;;;;;-1:-1:-1;;;;;589:2721:69;1551:72;;;;;;;589:2721;1551:72;;;589:2721;;;1648:3;589:2721;;;;;;;1551:72;;;;589:2721;1551:72;;;;;;;;;589:2721;1551:72;;;:::i;:::-;;;589:2721;;;;;1648:3;589:2721;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;1551:72;;;;;;-1:-1:-1;1551:72:69;;;589:2721;;;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;;;;;;;;;;;;4604:22:15;589:2721:69;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;589:2721:69;;;;4102:11:22;589:2721:69;;;;;;;719:10:27;589:2721:69;;;;;;;;;;;;;;11244:37:22;;11240:243;;589:2721:69;;5424:6:22;;;;;;:::i;11240:243::-;11305:26;;;589:2721:69;;;;;;11432:25:22;589:2721:69;;;5424:6:22;589:2721:69;;719:10:27;11432:25:22;;:::i;:::-;11240:243;;;;;;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4606:6:22;589:2721:69;;:::i;:::-;;;719:10:27;;4606:6:22;:::i;589:2721:69:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;-1:-1:-1;;;;589:2721:69;;;;;;;;-1:-1:-1;589:2721:69;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2840:47:15;;;:87;;;;589:2721:69;;;;;;;2840:87:15;-1:-1:-1;;;937:40:29;;-1:-1:-1;2840:87:15;;;589:2721:69;;;;;;;;-1:-1:-1;;589:2721:69;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;589:2721:69;;;;:::o;:::-;;;;-1:-1:-1;;;;;589:2721:69;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;589:2721:69;;;;;;:::o;3460:103:15:-;3130:6;589:2721:69;;;;;;;;;;;;;719:10:27;589:2721:69;;;;;;;;;;3931:23:15;3927:390;;3460:103;;;;:::o;3927:390::-;2497:52:28;719:10:27;2497:52:28;:::i;:::-;589:2721:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1975:15:28;;;589:2721:69;;;;;;;;;;;2000:15:28;589:2721:69;;;2000:15:28;589:2721:69;2025:128:28;2058:5;;;;;;2170:10;;;278:18;;589:2721:69;;;;4022:252:15;589:2721:69;;;;3970:336:15;589:2721:69;;4022:252:15;;-1:-1:-1;;;4022:252:15;;;;589:2721:69;;;;;;;;;;;;:::i;:::-;;4022:252:15;;;;;;;;;:::i;:::-;589:2721:69;-1:-1:-1;;;3970:336:15;;589:2721:69;;;2141:1:28;3970:336:15;;;:::i;278:18:28:-;;589:2721:69;;;;;;;278:18:28;;;2141:1;278:18;;;;;;589:2721:69;278:18:28;589:2721:69;;;278:18:28;;2065:3;2105:11;;;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:28;;2084:33;;;;:::i;:::-;;2141:1;278:18;2065:3;589:2721:69;;;;-1:-1:-1;;589:2721:69;;2030:26:28;;;589:2721:69;-1:-1:-1;;;589:2721:69;;;2141:1:28;589:2721:69;;;;2096:21:28;-1:-1:-1;;;589:2721:69;;;2141:1:28;589:2721:69;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7991:234:15:-;;3130:6;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8070:149:15;;7991:234;;;:::o;8070:149::-;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;8168:40:15;719:10:27;8168:40:15;;;7991:234::o;589:2721:69:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7456:788:22;-1:-1:-1;;;;;589:2721:69;;;;7552:18:22;;589:2721:69;;;7630:16:22;;;589:2721:69;;7568:1:22;589:2721:69;;;;;;;;;;7801:21:22;;;;589:2721:69;;;;;8163:26:22;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26:22;7456:788::o;589:2721:69:-;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;10457:340:22;-1:-1:-1;;;;;589:2721:69;;;;10558:19:22;;589:2721:69;;;10636:21:22;;;589:2721:69;;;10758:32:22;589:2721:69;;10575:1:22;589:2721:69;10707:11:22;589:2721:69;;;10575:1:22;589:2721:69;;10575:1:22;589:2721:69;;;;;10575:1:22;589:2721:69;;;;;;;10758:32:22;10457:340::o;589:2721:69:-;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;589:2721:69;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1818:437:28;589:2721:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:15:28;;;589:2721:69;;;;;;;;;2000:15:28;589:2721:69;;;2000:15:28;589:2721:69;2025:128:28;2058:5;;;;;;2170:10;;278:18;;1818:437;:::o;278:18::-;;589:2721:69;;;;;278:18:28;;589:2721:69;2141:1:28;278:18;;;589:2721:69;278:18:28;;;589:2721:69;278:18:28;589:2721:69;;;278:18:28;;2065:3;2105:11;;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:28;;2084:33;;;;:::i;:::-;;2141:1;278:18;2065:3;589:2721:69;;;;-1:-1:-1;;589:2721:69;;2030:26:28;;589:2721:69;;11264:17:22;589:2721:69;;;;;;2141:1:28;589:2721:69;;2096:21:28;589:2721:69;11264:17:22;589:2721:69;;;;;;2141:1:28;589:2721:69;;;;;;;;;;;;:::o;3010:298::-;3133:10;-1:-1:-1;589:2721:69;3519:9:22;589:2721:69;;;;-1:-1:-1;589:2721:69;;3123:30;3119:183;3123:30;;;589:2721;;-1:-1:-1;;;3176:26:69;;;;;589:2721;;;;;3176:26;3119:183;3133:10;3259:6;3133:10;;3259:6;:::i;:::-;3519:9:22;3280:11:69;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "quoteParity()": "2d15a567",
    "renounceRole(bytes32,address)": "36568abe",
    "retire(uint256)": "3790cf57",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "token()": "fc0c546a",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_certifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ApproveFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Retire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteParity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"parityRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cartesiCertifier\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is a insterface to interact with certifier cartesi machine, and other attributes of carbon credit\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"This function returns token (CarbonCredit) decimals\",\"returns\":{\"_0\":\"uint8 token decimals\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"This function mint token (CarbonCredit) to an address intermediated by company contract\",\"params\":{\"_amount\":\"amount of token to mint\",\"_to\":\"company agent address to mint token\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"quoteParity()\":{\"details\":\"This function stream onchain ETH-USD parity price with chainlink Data Feed\",\"returns\":{\"_0\":\"int256 ETH-USD parity price\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"retire(uint256)\":{\"details\":\"This function retire/burn token (CarbonCredit) from an address\",\"params\":{\"_amount\":\"amount of token to retire/burn\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"This function transfer token (CarbonCredit) to an address and send the transaction information to cartesi machine\",\"params\":{\"amount\":\"amount of token to transfer\",\"to\":\"address to transfer token\"},\"returns\":{\"_0\":\"bool true if transfer is successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Set Cartesi Cer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Token Decimals\"},\"mint(address,uint256)\":{\"notice\":\"Mint Token\"},\"quoteParity()\":{\"notice\":\"ETH-USD parity price\"},\"retire(uint256)\":{\"notice\":\"Retire/Burn Token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/token/ERC20/CarbonCredit.sol\":\"CarbonCredit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cartesi/contracts/=lib/rollups/onchain/rollups/contracts/\",\":@cartesi/utils/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/\",\":@chainlink/contracts/=lib/chainlink/contracts/src/v0.8/\",\":@contracts/=src/contracts/\",\":@interfaces/=src/interfaces/\",\":@libraries/=src/libraries/\",\":@mocks/=script/mocks/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@script/=script/\",\":@structs/=src/structs/\",\":@utils/=script/utils/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":rollups/=lib/rollups/\",\":solidity-util/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rollups/onchain/rollups/contracts/inputs/IInputBox.sol\":{\"keccak256\":\"0x2addd467a24cde2131784103080aeb28df40d87ba19c5fd92bf96c0c074603df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c7b3e76f855a1aab9272020d3e111215e0de6c01555c4d09b553f8bb962cb95\",\"dweb:/ipfs/QmPqeMBDCSpp9MrsKHP3XjZhKVpm9n1H9xZxgd2KAQppR4\"]},\"src/contracts/token/ERC20/CarbonCredit.sol\":{\"keccak256\":\"0xf748de753167dcc6f73fd141fdc8dc2f52b6874e0229c4e83df5b335f1a75c8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8af5c6b6873f679ff66991211a63be365f2e3fc83a8b875b71b0067092b329e\",\"dweb:/ipfs/QmeckgGbFQ4y8xHu39nH5K13H5gKbJcBVaJnFyHgQarrMT\"]},\"src/structs/CarbonCreditData.sol\":{\"keccak256\":\"0xcce2a9c87601a51d5f4baa92684d8d63e16ef215660465772c8032fce155007f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d71522ca308599e37ce6d037c00ce3c3ba15c6a81197b511e2bd8d329d6395\",\"dweb:/ipfs/QmRdXvXDg6bG2CAGsExnV85tHCNe6rT9xYP6zTiHbLgtVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "_certifier",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_priceFeed",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApproveFrom",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Retire",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoteParity",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retire"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "parityRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cartesiCertifier",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "This function returns token (CarbonCredit) decimals",
            "returns": {
              "_0": "uint8 token decimals"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "This function mint token (CarbonCredit) to an address intermediated by company contract",
            "params": {
              "_amount": "amount of token to mint",
              "_to": "company agent address to mint token"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "quoteParity()": {
            "details": "This function stream onchain ETH-USD parity price with chainlink Data Feed",
            "returns": {
              "_0": "int256 ETH-USD parity price"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "retire(uint256)": {
            "details": "This function retire/burn token (CarbonCredit) from an address",
            "params": {
              "_amount": "amount of token to retire/burn"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "This function transfer token (CarbonCredit) to an address and send the transaction information to cartesi machine",
            "params": {
              "amount": "amount of token to transfer",
              "to": "address to transfer token"
            },
            "returns": {
              "_0": "bool true if transfer is successful"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "decimals()": {
            "notice": "Token Decimals"
          },
          "mint(address,uint256)": {
            "notice": "Mint Token"
          },
          "quoteParity()": {
            "notice": "ETH-USD parity price"
          },
          "retire(uint256)": {
            "notice": "Retire/Burn Token"
          },
          "transfer(address,uint256)": {
            "notice": "Transfer Token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cartesi/contracts/=lib/rollups/onchain/rollups/contracts/",
        "@cartesi/utils/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/",
        "@chainlink/contracts/=lib/chainlink/contracts/src/v0.8/",
        "@contracts/=src/contracts/",
        "@interfaces/=src/interfaces/",
        "@libraries/=src/libraries/",
        "@mocks/=script/mocks/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@script/=script/",
        "@structs/=src/structs/",
        "@utils/=script/utils/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "rollups/=lib/rollups/",
        "solidity-util/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/token/ERC20/CarbonCredit.sol": "CarbonCredit"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rollups/onchain/rollups/contracts/inputs/IInputBox.sol": {
        "keccak256": "0x2addd467a24cde2131784103080aeb28df40d87ba19c5fd92bf96c0c074603df",
        "urls": [
          "bzz-raw://8c7b3e76f855a1aab9272020d3e111215e0de6c01555c4d09b553f8bb962cb95",
          "dweb:/ipfs/QmPqeMBDCSpp9MrsKHP3XjZhKVpm9n1H9xZxgd2KAQppR4"
        ],
        "license": "Apache-2.0"
      },
      "src/contracts/token/ERC20/CarbonCredit.sol": {
        "keccak256": "0xf748de753167dcc6f73fd141fdc8dc2f52b6874e0229c4e83df5b335f1a75c8b",
        "urls": [
          "bzz-raw://d8af5c6b6873f679ff66991211a63be365f2e3fc83a8b875b71b0067092b329e",
          "dweb:/ipfs/QmeckgGbFQ4y8xHu39nH5K13H5gKbJcBVaJnFyHgQarrMT"
        ],
        "license": "MIT"
      },
      "src/structs/CarbonCreditData.sol": {
        "keccak256": "0xcce2a9c87601a51d5f4baa92684d8d63e16ef215660465772c8032fce155007f",
        "urls": [
          "bzz-raw://77d71522ca308599e37ce6d037c00ce3c3ba15c6a81197b511e2bd8d329d6395",
          "dweb:/ipfs/QmRdXvXDg6bG2CAGsExnV85tHCNe6rT9xYP6zTiHbLgtVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/token/ERC20/CarbonCredit.sol",
    "id": 46210,
    "exportedSymbols": {
      "AccessControl": [
        39202
      ],
      "AggregatorV3Interface": [
        45
      ],
      "CarbonCredit": [
        46209
      ],
      "CarbonCreditData": [
        46287
      ],
      "ERC20": [
        40166
      ],
      "IInputBox": [
        43009
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3279:69",
    "nodes": [
      {
        "id": 46013,
        "nodeType": "PragmaDirective",
        "src": "32:23:69",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 46015,
        "nodeType": "ImportDirective",
        "src": "57:66:69",
        "nodes": [],
        "absolutePath": "lib/rollups/onchain/rollups/contracts/inputs/IInputBox.sol",
        "file": "@cartesi/contracts/inputs/IInputBox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46210,
        "sourceUnit": 43010,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46014,
              "name": "IInputBox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43009,
              "src": "65:9:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46017,
        "nodeType": "ImportDirective",
        "src": "124:68:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46210,
        "sourceUnit": 40167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46016,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40166,
              "src": "132:5:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46019,
        "nodeType": "ImportDirective",
        "src": "193:63:69",
        "nodes": [],
        "absolutePath": "src/structs/CarbonCreditData.sol",
        "file": "@structs/CarbonCreditData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46210,
        "sourceUnit": 46288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46018,
              "name": "CarbonCreditData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46287,
              "src": "201:16:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46021,
        "nodeType": "ImportDirective",
        "src": "257:79:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46210,
        "sourceUnit": 39203,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46020,
              "name": "AccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39202,
              "src": "265:13:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46023,
        "nodeType": "ImportDirective",
        "src": "337:96:69",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/interfaces/AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46210,
        "sourceUnit": 46,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46022,
              "name": "AggregatorV3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45,
              "src": "345:21:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46209,
        "nodeType": "ContractDefinition",
        "src": "589:2721:69",
        "nodes": [
          {
            "id": 46031,
            "nodeType": "VariableDeclaration",
            "src": "641:29:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "665:5:69",
            "scope": 46209,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage",
              "typeString": "struct CarbonCreditData"
            },
            "typeName": {
              "id": 46030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46029,
                "name": "CarbonCreditData",
                "nameLocations": [
                  "641:16:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46287,
                "src": "641:16:69"
              },
              "referencedDeclaration": 46287,
              "src": "641:16:69",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage_ptr",
                "typeString": "struct CarbonCreditData"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46036,
            "nodeType": "VariableDeclaration",
            "src": "677:55:69",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "694:11:69",
            "scope": 46209,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46032,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "677:7:69",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 46034,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "718:13:69",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 46033,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "708:9:69",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46035,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "708:24:69",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46040,
            "nodeType": "ErrorDefinition",
            "src": "739:42:69",
            "nodes": [],
            "errorSelector": "77b8dde3",
            "name": "InsufficientAmount",
            "nameLocation": "745:18:69",
            "parameters": {
              "id": 46039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46038,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "772:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46040,
                  "src": "764:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "763:17:69"
            }
          },
          {
            "id": 46046,
            "nodeType": "EventDefinition",
            "src": "787:47:69",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "82b89ed824b293574a2cca050e6e27837b60436d911352f8dca203a9cd35241c",
            "name": "Retire",
            "nameLocation": "793:6:69",
            "parameters": {
              "id": 46045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46042,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "808:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46046,
                  "src": "800:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "825:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46046,
                  "src": "817:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "799:34:69"
            }
          },
          {
            "id": 46054,
            "nodeType": "EventDefinition",
            "src": "839:63:69",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "53f87cecd60dec87da16ae9f11f240647e0b09c996cee0a9e4c038001a281bf6",
            "name": "ApproveFrom",
            "nameLocation": "845:11:69",
            "parameters": {
              "id": 46053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "865:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46054,
                  "src": "857:13:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "880:3:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46054,
                  "src": "872:11:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "893:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46054,
                  "src": "885:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:45:69"
            }
          },
          {
            "id": 46095,
            "nodeType": "FunctionDefinition",
            "src": "908:371:69",
            "nodes": [],
            "body": {
              "id": 46094,
              "nodeType": "Block",
              "src": "1109:170:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46071,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46031,
                        "src": "1119:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage",
                          "typeString": "struct CarbonCreditData storage ref"
                        }
                      },
                      "id": 46073,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1125:8:69",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46280,
                      "src": "1119:14:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46074,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46060,
                      "src": "1136:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1119:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46076,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:26:69"
                },
                {
                  "expression": {
                    "id": 46081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46077,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46031,
                        "src": "1155:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage",
                          "typeString": "struct CarbonCreditData storage ref"
                        }
                      },
                      "id": 46079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1161:5:69",
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46282,
                      "src": "1155:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46080,
                      "name": "_certifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46062,
                      "src": "1169:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1155:24:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46082,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:24:69"
                },
                {
                  "expression": {
                    "id": 46087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46083,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46031,
                        "src": "1189:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage",
                          "typeString": "struct CarbonCreditData storage ref"
                        }
                      },
                      "id": 46085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1195:12:69",
                      "memberName": "parityRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46284,
                      "src": "1189:18:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46086,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46064,
                      "src": "1210:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1189:31:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46088,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:31:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46090,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38914,
                        "src": "1241:18:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46091,
                        "name": "_certifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46062,
                        "src": "1261:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46089,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39170,
                      "src": "1230:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 46092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:42:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46093,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:42:69"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46067,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46056,
                    "src": "1083:10:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 46068,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46058,
                    "src": "1095:12:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 46069,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46066,
                  "name": "ERC20",
                  "nameLocations": [
                    "1077:5:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40166,
                  "src": "1077:5:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "1077:31:69"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46056,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "943:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46095,
                  "src": "929:24:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46055,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46058,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nameLocation": "977:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46095,
                  "src": "963:26:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46057,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46060,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1005:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46095,
                  "src": "999:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 46059,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46062,
                  "mutability": "mutable",
                  "name": "_certifier",
                  "nameLocation": "1032:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46095,
                  "src": "1024:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46064,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1060:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46095,
                  "src": "1052:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:157:69"
            },
            "returnParameters": {
              "id": 46070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1109:0:69"
            },
            "scope": 46209,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46115,
            "nodeType": "FunctionDefinition",
            "src": "1467:191:69",
            "nodes": [],
            "body": {
              "id": 46114,
              "nodeType": "Block",
              "src": "1519:139:69",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    46102,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 46102,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1536:5:69",
                      "nodeType": "VariableDeclaration",
                      "scope": 46114,
                      "src": "1532:9:69",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 46101,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1532:3:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 46109,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46104,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46031,
                              "src": "1573:5:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CarbonCreditData_$46287_storage",
                                "typeString": "struct CarbonCreditData storage ref"
                              }
                            },
                            "id": 46105,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1579:12:69",
                            "memberName": "parityRouter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46284,
                            "src": "1573:18:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46103,
                          "name": "AggregatorV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1551:21:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                            "typeString": "type(contract AggregatorV3Interface)"
                          }
                        },
                        "id": 46106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:41:69",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 46107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1606:15:69",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1551:70:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 46108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:72:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1529:94:69"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 46112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46110,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46102,
                      "src": "1640:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 46111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1648:3:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "1640:11:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 46100,
                  "id": 46113,
                  "nodeType": "Return",
                  "src": "1633:18:69"
                }
              ]
            },
            "documentation": {
              "id": 46096,
              "nodeType": "StructuredDocumentation",
              "src": "1285:177:69",
              "text": " @notice ETH-USD parity price\n @dev This function stream onchain ETH-USD parity price with chainlink Data Feed\n @return int256 ETH-USD parity price"
            },
            "functionSelector": "2d15a567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteParity",
            "nameLocation": "1476:11:69",
            "parameters": {
              "id": 46097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:2:69"
            },
            "returnParameters": {
              "id": 46100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46115,
                  "src": "1511:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 46098,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1510:8:69"
            },
            "scope": 46209,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46125,
            "nodeType": "FunctionDefinition",
            "src": "1810:82:69",
            "nodes": [],
            "body": {
              "id": 46124,
              "nodeType": "Block",
              "src": "1867:25:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "32",
                    "id": 46122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1884:1:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 46121,
                  "id": 46123,
                  "nodeType": "Return",
                  "src": "1877:8:69"
                }
              ]
            },
            "baseFunctions": [
              39654
            ],
            "documentation": {
              "id": 46116,
              "nodeType": "StructuredDocumentation",
              "src": "1664:141:69",
              "text": " @notice Token Decimals\n @dev This function returns token (CarbonCredit) decimals\n @return uint8 token decimals"
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1819:8:69",
            "overrides": {
              "id": 46118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1842:8:69"
            },
            "parameters": {
              "id": 46117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:2:69"
            },
            "returnParameters": {
              "id": 46121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46125,
                  "src": "1860:5:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 46119,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1859:7:69"
            },
            "scope": 46209,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46142,
            "nodeType": "FunctionDefinition",
            "src": "2140:109:69",
            "nodes": [],
            "body": {
              "id": 46141,
              "nodeType": "Block",
              "src": "2213:36:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46137,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46128,
                        "src": "2229:3:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46138,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46130,
                        "src": "2234:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46136,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39983,
                      "src": "2223:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:19:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46140,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:19:69"
                }
              ]
            },
            "documentation": {
              "id": 46126,
              "nodeType": "StructuredDocumentation",
              "src": "1898:237:69",
              "text": " @notice Mint Token\n @dev This function mint token (CarbonCredit) to an address intermediated by company contract\n @param _to company agent address to mint token\n @param _amount amount of token to mint"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46133,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46036,
                    "src": "2200:11:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46132,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2191:8:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38925,
                  "src": "2191:8:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:21:69"
              }
            ],
            "name": "mint",
            "nameLocation": "2149:4:69",
            "parameters": {
              "id": 46131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46128,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2162:3:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46142,
                  "src": "2154:11:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46130,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2175:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46142,
                  "src": "2167:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2153:30:69"
            },
            "returnParameters": {
              "id": 46135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:0:69"
            },
            "scope": 46209,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46174,
            "nodeType": "FunctionDefinition",
            "src": "2432:257:69",
            "nodes": [],
            "body": {
              "id": 46173,
              "nodeType": "Block",
              "src": "2474:215:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 46149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2498:3:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2502:6:69",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2498:10:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46148,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39678,
                        "src": "2488:9:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 46151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2488:21:69",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 46152,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46145,
                      "src": "2512:7:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2488:31:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46171,
                    "nodeType": "Block",
                    "src": "2586:97:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46160,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2606:3:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2610:6:69",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2606:10:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 46162,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46145,
                              "src": "2618:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46159,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40055,
                            "src": "2600:5:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 46163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2600:26:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46164,
                        "nodeType": "ExpressionStatement",
                        "src": "2600:26:69"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46166,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2652:3:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2656:6:69",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2652:10:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 46168,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46145,
                              "src": "2664:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46165,
                            "name": "Retire",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46046,
                            "src": "2645:6:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 46169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2645:27:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46170,
                        "nodeType": "EmitStatement",
                        "src": "2640:32:69"
                      }
                    ]
                  },
                  "id": 46172,
                  "nodeType": "IfStatement",
                  "src": "2484:199:69",
                  "trueBody": {
                    "id": 46158,
                    "nodeType": "Block",
                    "src": "2521:59:69",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 46155,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46145,
                              "src": "2561:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46154,
                            "name": "InsufficientAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "2542:18:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 46156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:27:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46157,
                        "nodeType": "RevertStatement",
                        "src": "2535:34:69"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 46143,
              "nodeType": "StructuredDocumentation",
              "src": "2255:172:69",
              "text": " @notice Retire/Burn Token\n @dev This function retire/burn token (CarbonCredit) from an address\n @param _amount amount of token to retire/burn"
            },
            "functionSelector": "3790cf57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retire",
            "nameLocation": "2441:6:69",
            "parameters": {
              "id": 46146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46145,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2456:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46174,
                  "src": "2448:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2447:17:69"
            },
            "returnParameters": {
              "id": 46147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2474:0:69"
            },
            "scope": 46209,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46208,
            "nodeType": "FunctionDefinition",
            "src": "3010:298:69",
            "nodes": [],
            "body": {
              "id": 46207,
              "nodeType": "Block",
              "src": "3109:199:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 46186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3133:3:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3137:6:69",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3133:10:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46185,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39678,
                        "src": "3123:9:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 46188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3123:21:69",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 46189,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46179,
                      "src": "3147:6:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3123:30:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46205,
                    "nodeType": "Block",
                    "src": "3219:83:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46197,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3243:3:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3247:6:69",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3243:10:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 46199,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46177,
                              "src": "3255:2:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 46200,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46179,
                              "src": "3259:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46196,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39926,
                            "src": "3233:9:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 46201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3233:33:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46202,
                        "nodeType": "ExpressionStatement",
                        "src": "3233:33:69"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 46203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3287:4:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 46184,
                        "id": 46204,
                        "nodeType": "Return",
                        "src": "3280:11:69"
                      }
                    ]
                  },
                  "id": 46206,
                  "nodeType": "IfStatement",
                  "src": "3119:183:69",
                  "trueBody": {
                    "id": 46195,
                    "nodeType": "Block",
                    "src": "3155:58:69",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 46192,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46179,
                              "src": "3195:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 46191,
                            "name": "InsufficientAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "3176:18:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 46193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3176:26:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46194,
                        "nodeType": "RevertStatement",
                        "src": "3169:33:69"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              39703
            ],
            "documentation": {
              "id": 46175,
              "nodeType": "StructuredDocumentation",
              "src": "2695:310:69",
              "text": " @notice Transfer Token\n @dev This function transfer token (CarbonCredit) to an address and send the transaction information to cartesi machine\n @param to address to transfer token\n @param amount amount of token to transfer\n @return bool true if transfer is successful"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3019:8:69",
            "overrides": {
              "id": 46181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3085:8:69"
            },
            "parameters": {
              "id": 46180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46177,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3045:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46208,
                  "src": "3037:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3037:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46179,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3065:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 46208,
                  "src": "3057:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3027:50:69"
            },
            "returnParameters": {
              "id": 46184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46208,
                  "src": "3103:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3102:6:69"
            },
            "scope": 46209,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46025,
              "name": "AccessControl",
              "nameLocations": [
                "614:13:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39202,
              "src": "614:13:69"
            },
            "id": 46026,
            "nodeType": "InheritanceSpecifier",
            "src": "614:13:69"
          },
          {
            "baseName": {
              "id": 46027,
              "name": "ERC20",
              "nameLocations": [
                "629:5:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40166,
              "src": "629:5:69"
            },
            "id": 46028,
            "nodeType": "InheritanceSpecifier",
            "src": "629:5:69"
          }
        ],
        "canonicalName": "CarbonCredit",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46024,
          "nodeType": "StructuredDocumentation",
          "src": "435:153:69",
          "text": " @title Set Cartesi Cer\n @dev This contract is a insterface to interact with certifier cartesi machine, and other attributes of carbon credit"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46209,
          40166,
          40269,
          40244,
          39202,
          40589,
          40601,
          39275,
          40336
        ],
        "name": "CarbonCredit",
        "nameLocation": "598:12:69",
        "scope": 46210,
        "usedErrors": [
          46040
        ],
        "usedEvents": [
          39214,
          39223,
          39232,
          40178,
          40187,
          46046,
          46054
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 69
}